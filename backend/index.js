

const express = require("express");
const bodyparser = require("body-parser");
var cors = require("cors");
const request = require("request");
let csv = require("csvtojson");
const { json } = require("body-parser");
const axios = require("axios");



let app = express();


let cities= [
  {
    "ID": "3",
    "Status": "confirmed",
    "Location": "London",
    "City": "London",
    "Country": "England",
    "Age": "",
    "Gender": "",
    "Date_onset": "2022-04-30",
    "Date_confirmation": "2022-05-13",
    "Symptoms": "vesicular rash",
    "Hospitalised (Y/N/NA)": "N",
    "Date_hospitalisation": "",
    "Isolated (Y/N/NA)": "Y",
    "Date_isolation": "",
    "Outcome": "",
    "Contact_comment": "",
    "Contact_ID": "2",
    "Contact_location": "Household",
    "Travel_history (Y/N/NA)": "N",
    "Travel_history_entry": "",
    "Travel_history_start": "",
    "Travel_history_location": "",
    "Travel_history_country": "",
    "Genomics_Metadata": "West African Clade",
    "Confirmation_method": "RT-PCR",
    "Notes": "",
    "Source": "https://www.gov.uk/government/news/monkeypox-cases-confirmed-in-england-latest-updates",
    "Source_II": "",
    "Date_entry": "2022-05-18",
    "Date_last_modified": "2022-05-18",
    "coordinates": [
        -0.1276474,
        51.5073219
    ]
}
  
];

let localcases = [];
 let countryCityCases = [{"coordinates": [
  -0.1276474,
  51.5073219
]}];

const apiUrl = "https://geocode.maps.co/search?q="
app.use(cors());
app.use(bodyparser.json());

/**await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
    private_key: process.env.GOOGLE_PRIVATE_KEY,
  });
  
  await doc.loadInfo(); // loads document properties and worksheets
  **/
 
  



app.listen(5000, () =>
  console.log("Express server is running at port no :5000")
);





  async function updateSheet() {

    
    jsonArray = await csv().fromFile("./MPcases.csv");


    let searchAdd = "";
    let latitude = 0;
    let longitude = 0;

  countryCityCases = await csv().fromFile("./MPcountries.csv");
    for(let j = 0; j < countryCityCases.length; j++){
    countryCityCases[j]["LocalCases"] = [];
    countryCityCases[j]["LocalCasesNum"] = [];
    countryCityCases[j]["LocalCasesCoord"] = [];

   try{      
    const data = await axios.get(`${apiUrl}{`+countryCityCases[j]['COUNTA of Country']+`}`);
    longitude = (data.data[0].lon);
    latitude = (data.data[0].lat);
    countryCityCases[j]["coordinates"] =[Number(longitude),Number(latitude)]
 


} catch (err) {
  countryCityCases[j]["coordinates"] =[0,0]
  console.log(err.message);
  
}
    
    
    }

    for (let i = 0; i < jsonArray.length; i++) {
      console.log(jsonArray[i].City)


       for(let j = 0; j < countryCityCases.length; j++){
   
        if(jsonArray[i].Country === countryCityCases[j]['COUNTA of Country']){
          
    if((countryCityCases[j].LocalCases).includes(jsonArray[i].City)){

      for(let k = 0; k < countryCityCases[j].LocalCases.length; k++){
        if(jsonArray[i].City === countryCityCases[j].LocalCases[k]){
countryCityCases[j].LocalCasesNum[k]+=1;
        }
      
      }  
  }
  else{

    countryCityCases[j]["LocalCases"].push(jsonArray[i].City);
    countryCityCases[j]["LocalCasesNum"].push(1)
    try {
        
      const data = await axios.get(`${apiUrl}{`+jsonArray[i].City+`}`);
      longitude = (data.data[0].lon);
      latitude = (data.data[0].lat);
      countryCityCases[j]["LocalCasesCoord"].push([longitude,latitude])
   

  
  } catch (err) {
    console.log(err.message);
  }

    }

}
} 

 

      if (jsonArray[i].City !== ""){
        searchAdd = jsonArray[i].City;
      
      }

      searchAdd = jsonArray[i].Country+","+searchAdd ;



      try {
        
          const data = await axios.get(`${apiUrl}{`+searchAdd+`}`);
          longitude = (data.data[0].lon);
          latitude = (data.data[0].lat);

       
        
       

      
      } catch (err) {
        console.log(err.message);
      }
     
       jsonArray[i]["coordinates"] = [Number(longitude),Number(latitude)];

    }
    localcases = countryCityCases.slice();

    console.log(localcases);

    cities = jsonArray.slice();
    

  
  
};
updateSheet();

app.get("/cases",  (req, res) => {

  console.log("called here",cities)
res.send([cities,localcases]);

});

